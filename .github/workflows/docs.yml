# CI/CD pipeline
name: docs

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest    
    
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Setup Python
        uses: actions/setup-python@v4.2.0
        with:
            python-version: '3.9'


      - name: Build docs (sphinx)
        run: |
          python -m pip install -e .
          python -m pip install .[docs]
          cd docs
          make clean
          sphinx-apidoc -f -n -o ./docs/source ../src/dymoval/
          make html
          cd ..
          
      - name: Init new repo in dist folder and commit generated files
        run: |
          cd docs/build/html/
          git init
          touch .nojekyll
          git add -A
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git commit -m "deploy"
      
      - name: Force push to destination branch
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN}}
          branch: gh-pages
          force: true
          directory: ./docs/build/html

      - name: Run test for generating .coverage file
        run: |
          coverage run -m pytest .
          coverage report -m

      - name: Coverage Badge
        uses: tj-actions/coverage-badge-py@v1.8

      - name: Verify Changed files
        uses: tj-actions/verify-changed-files@v9
        id: changed_files
        with:
          files: coverage.svg

      - name: Commit files
        if: steps.changed_files.outputs.files_changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add coverage.svg
          git commit -m "Updated coverage.svg"

      - name: Push changes
        if: steps.changed_files.outputs.files_changed == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.github_token }}
          branch: ${{ github.ref }}
        
  
          
        
         
