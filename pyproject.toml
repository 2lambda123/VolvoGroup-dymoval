[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
# General info
name = "dymoval"
version = "0.1"

# Requirements
requires-python = ">=3.9"
dependencies = [
"numpy",
"scipy",
"pandas",
"matplotlib",
"control",
"typing",
"pathlib"
]

# Other metadata
authors = [
  { name="Ubaldo Tiberi", email="ubaldo.tiberi@volvo.com" },
]
description = "Dymoval is a Python package for validating models and analyzing datasets."
readme = "README.md"
license = { file="LICENSE" }
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: BSD License",
    "Operating System :: OS Independent",
]
keywords = [
  "data-analysis",
  "modeling",
  "model validation",
  "dataset",
  "data"
]
# dynamic = ["version"] This may be useful once I will learn how to deal with versions


# For developers
[project.optional-dependencies]

build = ["hatch"]
test = [
  "pytest",
  "flake8",
  "mypy"
]
docs = [
  "sphinx",
  "furo",
  "sphinx-toolbox",
  "sphinx-autodoc-typehints"
]


[project.urls]
"Homepage" = "https://github.com/VolvoGroup/dymoval"
"Documentation" = "https://volvogroup.github.io/dymoval/"
"Bug Tracker" = "https://github.com/VolvoGroup/dymoval/issues"


# =======================
# Hatch settings
# =======================

[tool.hatch.build.targets.sdist]
exclude = [
  "/.github"
]

[tool.hatch.build.targets.wheel]
only-include = ["src/dymoval", "scripts"]

[tool.hatch.build.targets.wheel.sources]
"src" = ""
"scripts" = "dymoval/scripts"


# ===================================
# Formatting, type check, unit-test 
# ===================================
# black
[tool.black]
target-version = ['py39']
line-length = 80
exclude = ["scripts", "docs"]

# mypy
[tool.mypy]
python_version = "3.9"
disallow_untyped_defs = true
show_error_codes = true
no_implicit_optional = true
warn_return_any = true
warn_unused_ignores = true
# For now, mypy is only run on ./src
# The following two shall be module specific
ignore_missing_imports = true
disable_error_code = ["name-defined"]

[[tool.mypy.overrides]]
module = [
    "dataset",
    "validation",
    "utils",
    "config",
]


# pytest
[tool.pytest.ini_options]
norecursedirs = ["scripts"] # Exclude folders

